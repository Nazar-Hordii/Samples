// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeedSample;

namespace SeedSample.Migrations
{
    [DbContext(typeof(F1Context))]
    [Migration("20180828121351_InitF1")]
    partial class InitF1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeedSample.Racer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Team")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Racers");

                    b.HasData(
                        new { Id = 1, Name = "Lewis Hamilton", Team = "Mercedes" },
                        new { Id = 2, Name = "Sebastian Vettel", Team = "Ferrari" },
                        new { Id = 3, Name = "Kimi Räikkönen", Team = "Ferrari" },
                        new { Id = 4, Name = "Valtteri Bottas", Team = "Mercedes" },
                        new { Id = 5, Name = "Max Verstappen", Team = "Red Bull Racing" },
                        new { Id = 6, Name = "Daniel Ricciardo", Team = "Red Bull Racing" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
